{"version":3,"file":"filter.pipe.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/filter.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'filter'})\nexport class FilterPipe implements PipeTransform {\n\n    transform(list: any, str_filter): string {\n\tif (str_filter == \"\")\n\t    return list;\n\n\tlet obj_type = \"prog\";\n\tif (list && list.length && \"program_info\" in list[0])\n\t    obj_type = \"alert\"\n\t\n\t\n\tlet rules = {\n\t    \"contain_str\": [],\n\t    \"version\":[],\n\t    \"station\":[],\n\t    \"is\": [],\n\t    \"state\":[]\n\t};\n\n\tlet reversable = [\"is\", \"state\"];\n\n\tif (obj_type != \"alert\")\n\t    delete rules.state;\n\n\tfor (let word of str_filter.split(\" \")) {\n\t    if (word == \"\")\n\t    \tcontinue;\n\t    let op_idx = word.indexOf(\":\");\n\t    if (op_idx != -1) {\n\t\tlet op_key = word.substring(0, op_idx);\n\n\t\tif (op_key in rules) {\n\t\t    let op_value = word.substring(op_idx + 1);\n\t\t    let reversed = false;\n\n\t\t    if (op_value.startsWith(\"!\") && reversable.indexOf(op_key) != -1) {\n\n\t\t\treversed = true;\n\t\t\top_value = op_value.substring(1);\n\t\t    }\n\t\t    if (op_value != \"\")\n\t\t\trules[op_key].push({\"reversed\": reversed, \"value\":op_value});\n\t\t}\n\t\telse\n\t\t    rules.contain_str.push(word);\t\t\t \n\t    }\n\t    else\n\t\trules.contain_str.push(word);\n\t}\n\n\tlet matching = list.filter(obj => {\n\n\t    let name;\n\t    let version;\n\t    let station;\n\t    \n\t    if (obj_type == \"prog\") {\n\t\tname = obj.program_name;\n\t\tversion = obj.program_version;\n\t\tstation = obj.station_name;\n\t    }\n\t    else {\n\t\tname = obj.program_info.program_name;\n\t\tversion = obj.program_info.program_version;\n\t\tstation = obj.program_info.station_name;\n\t    }\n\n\t    let ret;\n\t    if (rules.contain_str.length) {\n\t\tret = false;\n\t\tfor (let word of rules.contain_str)\n\t\t    ret = ret || name.toLowerCase().indexOf(word.toLowerCase()) !== -1;\n\t\tif (!ret)\n\t\t    return ret;\n\t    }\n\n\t    if (rules.is.length) {\n\t\tret = false;\n\t\tfor (let op_is of rules.is) {\n\t\t    if (op_is.value.startsWith(\"v\") && obj_type == \"prog\") // vuln\n\t\t\tret = ret || (obj.alert_id != null) != op_is.reversed;\n\t\t    else if (op_is.value.startsWith(\"r\") && obj_type == \"alert\") // read\n\t\t\tret = ret || (!!obj.view) != op_is.reversed;\n\t\t    else if (op_is.value.startsWith(\"n\") && obj_type == \"alert\") // new\n\t\t\tret = ret || !((!!obj.view) != op_is.reversed);\n\t\t}\n\t\tif (!ret)\n\t\t    return ret;\n\t    }\n\n\n\t    if (\"state\" in rules) {\n\t\tret = false;\n\t\tfor (let op_state of rules.state) {\n\t\t    if (op_state.value.startsWith(\"e\")) // exploit\n\t\t\tret = ret || ((obj.state.indexOf(\"exploit\") !== -1) != op_state.reversed);\n\t\t    else if (op_state.value.startsWith(\"p\")) // patch\n\t\t\tret = ret || ((obj.state.indexOf(\"patch\") !== -1) != op_state.reversed);\n\t\t}\n\t\tif (rules.state.length && !ret)\n\t\t    return ret;\n\t    }\n\n\n\t    if (rules.version.length) {\n\t\tret = false;\n\t\tfor (let op_version of rules.version) {\n\t\t    ret = ret || version.toLowerCase().indexOf(op_version.value.toLowerCase()) !== -1;\n\t\t}\n\t\tif (!ret)\n\t\t    return ret;\n\t    }\n\n\t    ret = false;\n\t    for (let op_station of rules.station) {\n\t\tret = ret || station.toLowerCase().indexOf(op_station.value.toLowerCase()) !== -1;\n\t    }\n\t    if (rules.station.length && !ret)\n\t\treturn ret;\n\n\t    return true;\n\t});\n\n\tmatching = JSON.parse(JSON.stringify(matching));\n\treturn matching.map(obj => {\n\t    let name;\n\t    let version;\n\t    let station;\n\t    \n\t    if (obj_type == \"prog\") {\n\t    \tname = obj.program_name;\n\t    \tversion = obj.program_version;\n\t    \tstation = obj.station_name;\n\t    }\n\t    else {\n\t    \tname = obj.program_info.program_name;\n\t    \tversion = obj.program_info.program_version;\n\t    \tstation = obj.program_info.station_name;\n\t    }\n\t    name = this.htmlEscape(name);\n\t    version = this.htmlEscape(version);\n\t    station = this.htmlEscape(station);\n\n\t    name = this.hl(name, rules.contain_str);\n\t    if (rules.version.length)\n\t\tversion = this.hl(version, rules.version.map(o => o.value));\n\t    if (rules.station.length)\n\t\tstation = this.hl(station, rules.station.map(o => o.value));\n\n\t    \n\t    if (obj_type == \"prog\") {\n\t    \tobj.program_name = name;\n\t    \tobj.program_version = version;\n\t    \tobj.station_name = station;\n\t    }\n\t    else {\n\t    \tobj.program_info.program_name = name;\n\t    \tobj.program_info.program_version = version;\n\t    \tobj.program_info.station_name = station;\n\t    }\n\n\t    \n\t    return obj;\n\t    \n\t});\n\n    }\n\n    hl(str, values) {\n\tif (!values.length)\n\t    return str;\n\tlet re = new RegExp(values.join(\"|\"),\"gi\");\n\tstr = str.replace(re, (matched) => {\n\t    return '<span class=\"filterHl\">' + matched + '</span>';\n\t});\n\treturn str;\n    }\n\n    htmlEscape(val) {\n\tval = val.replace(\"<\", \"&lt;\");\n\tval = val.replace(\">\", \"&gt;\");\n\treturn val;\n    }\n}\n"]}