{"version":3,"file":"cvss.pipe.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/cvss.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAGpD;IAAA;QAEI,gBAAW,GAAG;YACjB,eAAe,EAAE,6DAA6D;YAC9E,mBAAmB,EAAE,yEAAyE;YAC9F,gBAAgB,EAAE,mFAAmF;YACrG,wBAAwB,EAAE,wEAAwE;YAClG,kBAAkB,EAAE,kEAAkE;YACtF,qBAAqB,EAAE,qEAAqE;SACxF,CAAA;IAaL,CAAC;IAXG,4BAAS,GAAT,UAAU,SAAiB;QAC9B,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,IAAI,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACjD,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC3C,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAE3C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjE,CAAC;QACD,MAAM,CAAC,EAAE,CAAC;IACP,CAAC;IAtBL;QAAC,WAAI,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;gBAAA;IAuBrB,eAAC;AAAD,CAAC,AAtBD,IAsBC;AAtBY,gBAAQ,WAsBpB,CAAA","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'cvss'})\nexport class CvssPipe implements PipeTransform {\n\n    CVSS_lvalue = {\n\t\"access-vector\": \"This vulnerability can be accessed via <strong>%s</strong>.\",\n\t\"access-complexity\": \"The complexity of exploiting this vulnerability is <strong>%s</strong>.\",\n\t\"authentication\": \"This vulnerability requires <strong>%s</strong> authentification to be exploited.\",\n\t\"confidentiality-impact\": \"This vulnerability lead to <strong>%s</strong> confidentiality impact.\",\n\t\"integrity-impact\": \"This vulnerability lead to <strong>%s</strong> integrity impact.\",\n\t\"availability-impact\": \"This vulnerability lead to <strong>%s</strong> availability impact.\"\n    }\n\n    transform(cvss_part: string): string {\n\tif (cvss_part) {\n\t    let splited = cvss_part.split(\":\");\n\t    let to_insert = splited[1].replace(\"NONE\", \"NO\");\n\t    to_insert = to_insert.replace(\"<\", \"&lt;\");\n\t    to_insert = to_insert.replace(\">\", \"&gt;\");\n\t    \n\t    return this.CVSS_lvalue[splited[0]].replace(\"%s\", to_insert);\n\t}\n\treturn \"\";\n    }\n}\n"]}