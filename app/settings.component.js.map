{"version":3,"file":"settings.component.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/settings.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6C,eAAe,CAAC,CAAA;AAC7D,uBAAuB,iBAAiB,CAAC,CAAA;AAEzC,6BAA4B,gBAAgB,CAAC,CAAA;AAC7C,6BAA4B,gBAAgB,CAAC,CAAA;AAC7C,iCAAgC,oBAAoB,CAAC,CAAA;AACrD,iCAAiE,oBACjE,CAAC,CADoF;AACrF,uBAAgF,iBAAiB,CAAC,CAAA;AAClG,sCAAqC,yBACrC,CAAC,CAD6D;AAC9D,+BAA8B,kBAAkB,CAAC,CAAA;AACjD,8BAA6B,iBAAiB,CAAC,CAAA;AAQ/C;IA2BI,2BAAqB,WAAwB,EACtC,WAAwB,EACxB,eAAgC,EAChC,MAAc,EACd,OAAoB,EACpB,oBAA0C,EAC1C,aAA4B,EAC5B,YAA0B;QAPZ,gBAAW,GAAX,WAAW,CAAa;QACtC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAa;QACpB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAhCjC,SAAI,GAAG;YACV,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,IAAI;SAClB,CAAC;QACF,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;QAClB,aAAQ,GAAG,EAAE,CAAC;QACd,qBAAgB,GAAG,EAAE,CAAC;QACtB,kBAAa,GAAG,EAAE,CAAC;QACnB,wBAAmB,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvC,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG;YACjB,CAAC,EAAC,KAAK;YACP,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,KAAK;SACJ,CAAA;QACD,UAAK,GAAG,EAAE,CAAA;QACV,cAAS,GAAG,EAAE,CAAA;QACd,kBAAa,GAAG,IAAI,CAAC;QACrB,mBAAc,GAAG,CAAC,CAAA;QAClB,YAAO,GAAG,CAAC,CAAC,CAAC;QACb,qBAAgB,GAAG,CAAC,CAAC;IAUrB,CAAC;IAED,oCAAQ,GAAR;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC;QAE9D,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,gBAAO,CAAC,EAAE,EAAC,iCAAc,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAO,CAAC,EAAE,EAAE,mCAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAO,CAAC,EAAE,EAAE,iCAAc,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAChC,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK;YACvB,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;YAC7B,gBAAgB,EAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;SAChD,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,CAAC;IAEf,CAAC;IAED,uCAAW,GAAX;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;YACnB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAGD,sCAAU,GAAV;QAAA,iBAcC;QAbJ,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YACtD,MAAM,CAAC;QACX,IAAI,CAAC,gBAAgB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAC,IAAI,CAAC;QAElD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAChC,UAAA,IAAI;YACP,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;YAChD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAC9D,KAAI,CAAC,WAAW,EAAE,CAAA;QACf,CAAC,EACD,UAAA,KAAK;QACL,CAAC,CACJ,CAAC;IACC,CAAC;IAED,uCAAW,GAAX;QAAA,iBAeC;QAdJ,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CACtC,UAAA,IAAI;YACP,KAAI,CAAC,KAAK,GAAG,IAAI,CAAA;YACjB,GAAG,CAAC,CAAW,UAAU,EAAV,KAAA,KAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,CAAC;gBAArB,IAAI,EAAE,SAAA;gBACP,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;aAAA;YAC/B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;YAElE,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,eAAe,EAAE,CAAC;QAExB,CAAC,EACD,UAAA,KAAK;QACL,CAAC,CACJ,CAAC;IACC,CAAC;IAED,2CAAe,GAAf;QAAA,iBAuBC;QAtBJ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;YACvB,MAAM,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,EAAE,IAAI,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;QAElE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC;QAEX,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;QAClD,IAAI,CAAC,cAAc,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;QAC9F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAErD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,CAC7B,CAAC;YACG,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACxC,CAAC;IACE,CAAC;IAED,yCAAa,GAAb;QAAA,iBAcC;QAbJ,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,GAAG,kDAAkD,CAAC,CAAC;QAC1H,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YACL,MAAM,CAAC;QACX,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CACtC;YACH,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;YAChE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/B,CAAC,EACD,UAAA,KAAK;YACR,EAAE,CAAC,CAAC,KAAK,IAAI,iBAAiB,CAAC;gBAC3B,MAAM,KAAK,CAAC;QACb,CAAC,CACJ,CAAC;IACC,CAAC;IAED,yCAAa,GAAb;QAAA,iBA2BC;QA1BJ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,IAAI,GAAG,EAAE,CAAC;QAEd,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAClC,IAAI,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAEhD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CACxC;YACH,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAChD,CAAC,EACD,UAAC,GAAG;YACP,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACzC,CAAC;YACL,CAAC;YACD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QACxB,CAAC,CACJ,CAAC;IACC,CAAC;IAED,uCAAW,GAAX,UAAY,IAAI;QACnB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,GAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IA5KL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,6BAA6B;YAC1C,UAAU,EAAE,CAAC,wBAAe,CAAC;SAChC,CAAC;;yBAAA;IAyKF,wBAAC;AAAD,CAAC,AAvKD,IAuKC;AAvKY,yBAAiB,oBAuK7B,CAAA","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from './user.model';\nimport { AuthService } from './auth.service';\nimport { UserService } from './user.service';\nimport { StationsService } from './stations.service';\nimport { PhoneValidator, MatchValidator, TriggerValidator } from './validation.class'\nimport { FormBuilder, Validators, Control, ControlGroup, FORM_DIRECTIVES } from '@angular/common';\nimport { NotificationsService } from './notifications.service'\nimport { StripeService } from './stripe.service';\nimport { PlansService } from './plans.service';\n\n@Component({\n    selector: 'settings',\n    templateUrl: 'app/settings.component.html',\n    directives: [FORM_DIRECTIVES]\n})\n\nexport class SettingsComponent implements OnInit, OnDestroy {\n\n    ctrl = {\n\tform: null,\n\tphone: null,\n\tpassword: null,\n\tpassword_confirm: null\n    };\n    loadingSubmit = false;\n    phone_number = \"\";\n    password = \"\";\n    password_confirm = \"\";\n    default_alert = \"\";\n    default_alert_types = [\"EMAIL\", \"SMS\"];\n    error_field = {};\n    loadingPlan = {\n\t0:false,\n\t1: false,\n\t2: false\n    }\n    plans = []\n    plans_dic = {}\n    selected_plan = null;\n    remaining_time = 0\n    timerId = -1;\n    last_reload_user = 0;\n\n    constructor (private authService: AuthService,\n\t\t private userService: UserService,\n\t\t private stationsService: StationsService,\n\t\t private router: Router,\n\t\t private builder: FormBuilder,\n\t\t private notificationsService: NotificationsService,\n\t\t private stripeService: StripeService,\n\t\t private plansService: PlansService\n\t\t){}\n    \n    ngOnInit() {\n\tthis.phone_number = this.userService.user.phone;\n\tthis.default_alert = this.userService.user.default_alert_type;\n\n\tthis.ctrl.phone = new Control(\"\",PhoneValidator.isPrefixed);\n\tthis.ctrl.password = new Control(\"\", TriggerValidator(this.ctrl, \"password_confirm\"));\n\tthis.ctrl.password_confirm = new Control(\"\", MatchValidator(this.ctrl, \"password\"));\n\tthis.ctrl.form = this.builder.group({\n\t    phone:  this.ctrl.phone,\n\t    password:  this.ctrl.password,\n\t    password_confirm:  this.ctrl.password_confirm\n\t});\n\t\n\tthis.reloadUser();\n\t\n    }\n\n    ngOnDestroy() {\n\tif (this.timerId != -1)\n\t    clearInterval(this.timerId);\n    }\n\n\n    reloadUser() {\n\tif (new Date().getTime()/1000 - this.last_reload_user < 1)\n\t    return;\n\tthis.last_reload_user = new Date().getTime()/1000;\n\t\n\tthis.userService.getUser().subscribe(\n\t    data => {\n\t\tthis.phone_number = this.userService.user.phone;\n\t\tthis.default_alert = this.userService.user.default_alert_type;\n\t\tthis.reloadPlans()\n\t    },\n\t    error => {\n\t    }\n\t);\n    }\n\n    reloadPlans() {\n\tthis.plansService.getPlansList().subscribe(\n\t    data => {\n\t\tthis.plans = data\n\t\tfor (let pl of this.plans)\n\t\t    this.plans_dic[pl.id] = pl;\n\t\tthis.selected_plan = this.plans_dic[this.userService.user[\"plan\"]]\n\n\t\tif (this.timerId == -1)\n\t\t    this.updateRemaining();\n\t\t\n\t    },\n\t    error => {\n\t    }\n\t);\n    }\n\n    updateRemaining() {\n\tif (this.plans.length == 0)\n\t    return;\n\n\tif (this.timerId == -1) {\n\t    this.timerId = setInterval(() => this.updateRemaining(), 3000);\n\t}\n\n\tthis.selected_plan = this.plans_dic[this.userService.user[\"plan\"]]\n\n\tif (this.selected_plan.validity_time == 0)\n\t    return;\n\t    \n\tthis.remaining_time = new Date().getTime() / 1000;\n\tthis.remaining_time -= new Date(this.userService.user[\"plan_purchase_date\"]).getTime() / 1000;\n\tthis.remaining_time = this.selected_plan.validity_time - this.remaining_time;\n\tthis.remaining_time = Math.ceil(this.remaining_time);\n\n\tif (this.remaining_time <= 0)\n\t{\n\t    this.reloadUser();\n\t    this.stationsService.discardCache();\n\t}\n    }\n\n    deleteAccount() {\n\tlet ret = window.confirm(\"The user '\" + this.userService.user.email + \"' and all the data linked to it will be deleted.\");\n\tif (!ret)\n\t    return;\n\tthis.userService.deleteAccount().subscribe(\n\t    () => {\n\t\tthis.notificationsService.success(\"The user has been deleted.\");\n\t\tthis.router.navigate(['/logout']);\n\t    },\n\t    error => {\n\t\tif (error == \"NeedToReconnect\")\n\t\t    throw error;\n\t    }\n\t);\n    }\n\n    onClickSubmit() {\n\tthis.loadingSubmit = true;\n\n\tlet info = {};\n\n\tinfo[\"phone\"] = this.phone_number;\n\tinfo[\"default_alert_type\"] = this.default_alert;\n\n\tif (this.password != \"\" && this.password == this.password_confirm) {\n\t    info[\"password\"] = this.password;\n\t}\n\n\tthis.error_field = {};\n\tthis.userService.updateInfos(info).subscribe(\n\t    () => {\n\t\tthis.loadingSubmit = false;\n\t\tthis.notificationsService.info(\"Changes submited\");\n\t    },\n\t    (err) => {\n\t\tif (err.json) {\n\t\t    for (let f in err.json) {\n\t\t\tthis.error_field[f] = err.json[f].join(\" \");\n\t\t    }\n\t\t}\n\t\tthis.loadingSubmit = false;\n\t    }\n\t);\n    }\n\n    onClickPlan(plan) {\n\tthis.stripeService.setProduct(plan.id, plan.price*100, plan.name);\n\tthis.stripeService.checkout();\n    }\n}\n"]}