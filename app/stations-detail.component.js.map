{"version":3,"file":"stations-detail.component.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/stations-detail.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from './user.model';\nimport { StationsService } from './stations.service';\nimport { FormBuilder, Validators, Control, ControlGroup, FORM_DIRECTIVES } from '@angular/common';\nimport { NotificationsService } from './notifications.service'\n\n@Component({\n    selector: 'stations-detail',\n    templateUrl: 'app/stations-detail.component.html',\n    directives: []\n})\n\nexport class StationsDetailComponent implements OnInit {\n    loadingSubmit = false;\n    have_changes = false;\n    alerts:Array<Object> = []\n    station_obj = null;\n    station_obj_origin = null;\n    station_params = [\n\t{name: \"Name\", key: \"name\"}\n    ]\n\n    clicked = false;\n    ctrl = {\n\tform: null,\n\tname: null,\n    }\n    error_field = {}\n\n    constructor (private router: Router,\n\t\t private route: ActivatedRoute,\n\t\t private stationsService: StationsService,\n\t\t private builder: FormBuilder,\n\t\t private notificationsService: NotificationsService\n\t\t){}\n\n    ngOnInit() {\n\tthis.ctrl.name = new Control(\"\", Validators.required);\n\tthis.ctrl.form = this.builder.group({\n\t    name:  this.ctrl.name,\n\t});\n\n\tlet sub = this.route.params.subscribe(params => {\n\t    let id = +params['id'];\n\t    this.stationsService.getStationsDetail(id).subscribe(\n\t\tstation => {\n\t\t    this.station_obj_origin = JSON.parse(JSON.stringify(station));\n\t\t    this.station_obj = station;\n\t\t},\n\t\terror => {\n\t\t    if (error == \"NeedToReconnect\")\n\t\t\tthrow error;\n\t\t    this.stationsService.discardCache();\n\t\t    this.onGoBackList();\n\t\t}\n\t    );\n\t});\n    }\n\n    onChange(key, ev) {\n\tthis.station_obj[key] = ev.target.value;\n\tthis.updateHaveChange();\n    }\n\n    updateHaveChange() {\n\tlet tmp_changes = false;\n\tfor (var i = 0 ; i < this.station_params.length ; i++)\n\t{\n\t    let k = this.station_params[i][\"key\"];\n\t    tmp_changes = tmp_changes || (this.station_obj_origin[k] != this.station_obj[k]);\n\t}\n\n\tthis.have_changes = tmp_changes;\n    }\n\n    onSubmit() {\n\tthis.error_field = {}\n\tthis.clicked = true;\n\tif (!this.ctrl.form.valid)\n\t    return;\n\tthis.loadingSubmit = true;\n\tthis.stationsService.updateStationDetail(this.station_obj.id, this.station_obj).subscribe(\n\t    station => {\n\t\tthis.loadingSubmit = false;\n\t\tthis.station_obj_origin = JSON.parse(JSON.stringify(station))\n\t\tthis.updateHaveChange();\n\t\tthis.notificationsService.info(\"Changes submited\");\n\t    },\n\t    error => {\n\t\tthis.loadingSubmit = false;\n\t\tif (error == \"NeedToReconnect\")\n\t\t    throw error;\n\t\tif (error.json) {\n\t\t    for (let f in error.json) {\n\t\t\tthis.error_field[f] = error.json[f].join(\" \");\n\t\t    }\n\t\t}\n\t\tif (error.code == 404) {\n\t\t    this.notificationsService.alert(\"This station has been deleted and can't be updated anymore.\");\n\t\t    this.stationsService.discardCache();\n\t\t    this.onGoBackList();\n\t\t}\n\t    }\n\t);\n\n    }\n    \n    onGoBackList() {\n\tthis.router.navigate(['/stations']);\n    }\n}\n"]}