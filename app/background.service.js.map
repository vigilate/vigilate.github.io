{"version":3,"file":"background.service.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/background.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from './user.model';\nimport { HttpServiceError } from './http-service-error.class'\nimport { Backend } from './backend.class'\nimport { UserService } from './user.service';\nimport { NotificationsService } from './notifications.service'\n\n@Injectable()\nexport class BackgroundService {\n\n    @Output() cntAlertChange = new EventEmitter();\n    @Output() cntTotalAlert = new EventEmitter();\n    @Output() cntTotalProg = new EventEmitter();\n    @Output() cntTotalStation = new EventEmitter();\n\n    update_interval = 10;\n    intervalId = -1;\n    last_update_request = 0;\n    is_new = true;\n    stats = null;\n\n    stats_dic = {\n\t\"alerts\": {name: \"alert\", \"+\": \"alert\", \"-\": \"success\"},\n\t\"programs\": {name: \"program\", \"+\": \"info\", \"-\": \"info\"},\n\t\"stations\": {name: \"station\", \"+\": \"info\", \"-\": \"info\"}\n    };\n    \n    constructor (private userService: UserService,\n\t\t private notificationsService: NotificationsService\n\t\t) {}\n\n    init() {\n\tif (this.intervalId == -1) {\n\t    this.intervalId = setInterval(\n\t\t() => {\n\t\t    this.update();\n\t\t},\n\t\tthis.update_interval * 1000);\n\t}\n\tthis.update();\n    }\n\n    update() {\n\tlet current_time = new Date().getTime()/1000;\n\tif (current_time - this.last_update_request < 1)\n\t    return;\n\tthis.last_update_request = current_time;\n\tthis.is_new = false;\n\tthis.userService.getStats()\n\t    .subscribe(stats => {\n\t\tthis.processNotification(stats);\n\t\tthis.stats = stats;\n\t\tthis.cntAlertChange.emit(stats.new_alerts)\n\t\tthis.cntTotalAlert.emit(stats.alerts)\n\t\tthis.cntTotalProg.emit(stats.programs)\n\t\tthis.cntTotalStation.emit(stats.stations)\n\t});\n    }\n\n    stop() {\n\tclearInterval(this.intervalId);\n    }\n\n    processNotification(stats) {\n\tif (this.stats == null)\n\t    return;\n\n\tfor (let key of Object.keys(this.stats_dic)) {\n\t    let name = this.stats_dic[key].name;\n\t    let diff = stats[key] - this.stats[key];\n\t    let plural = Math.abs(diff) > 1;\n\t    let sign = diff > 0 ? \"+\" : \"-\";\n\n\t    if (!diff)\n\t\tcontinue;\n\t    let msg = \" \"\n\t\t+ name\n\t\t+ (plural ? \"s\" : \"\")\n\t\t+ \" has been \"\n\t\t+ (sign == \"+\" ? \"added\" : \"removed\")\n\t\t+ \".\";\n\n\t    this.notificationsService.push(this.stats_dic[key][sign], Math.abs(diff) + msg);\n\t}\n    }\n}\n"]}