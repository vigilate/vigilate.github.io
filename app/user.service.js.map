{"version":3,"file":"user.service.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from './user.model';\nimport { HttpServiceError } from './http-service-error.class'\nimport { Api } from './api.service'\n\n@Injectable()\nexport class UserService {\n\n    user: User = null;\n\n    constructor (private httpServiceError: HttpServiceError,\n\t\t private api: Api) {}\n\n    private url = \"/users/\";\n\n    getUser(): Observable<any> {\n\treturn this.api.get(this.url)\n\t    .map(data => data.json())\n\t    .catch(this.httpServiceError.handleError).do(data => {\n\t\tthis.user = data[0];\n\t    });\n    }\n\n    deleteAccount(): Observable<any> {\n\treturn this.api.delete(this.url + this.user.id + \"/\")\n\t    .map(data => {\n\t\tif (!data.ok)\n\t\t    return data.json()\n\t\treturn data;\n\t    })\n\t    .catch(this.httpServiceError.handleError);\n    }\n\n    updatePhoneNumber(phone): Observable<any> {\n\tvar body = JSON.stringify({\"phone\": phone});\n\n\treturn this.api.patch(this.url + this.user.id + \"/\", body)\n\t    .map(data => data.json())\n\t    .catch(this.httpServiceError.handleError);\n    }\n\n    updateInfos(infos): Observable<any> {\n\tvar body = JSON.stringify(infos);\n\treturn this.api.patch(this.url + this.user.id + \"/\", body)\n\t    .do((data) => {\n\t\tif (data.ok)\n\t\t    this.user = data.json();\n\t    })\n\t\t.map(data => data.json())\n\t    .catch(this.httpServiceError.handleError);\n    }\n\n    getStats(): Observable<any> {\n\treturn this.api.get(this.url + this.user.id + \"/stats/\")\n\t    .map(data => data.json())\n\t    .catch(this.httpServiceError.handleError);\n    }\n}\n"]}