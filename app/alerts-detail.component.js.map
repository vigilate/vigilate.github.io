{"version":3,"file":"alerts-detail.component.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/alerts-detail.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAuC,iBAAiB,CAAC,CAAA;AAGzD,6BAA4B,gBAAgB,CAAC,CAAA;AAC7C,+BAA8B,kBAAkB,CAAC,CAAA;AACjD,0BAAyB,aAAa,CAAC,CAAA;AASvC;IAGI,+BAAqB,WAAwB,EACtC,aAA4B,EAC5B,MAAc,EACd,KAAqB;QAHP,gBAAW,GAAX,WAAW,CAAa;QACtC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;IAC5B,CAAC;IAED,wCAAQ,GAAR;QAAA,iBA2BC;QA1BJ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YACxC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CACnD,UAAA,OAAO;gBACH,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAA;gBACrD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC;yBAC1B,SAAS,CACb,UAAA,GAAG;wBACC,KAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAA;oBACrC,CAAC,EACD,UAAA,KAAK;wBACD,EAAE,CAAC,CAAC,KAAK,IAAI,iBAAiB,CAAC;4BAClC,MAAM,KAAK,CAAC;wBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;gBACD,CAAC;YACL,CAAC,EACD,UAAA,KAAK;gBACD,EAAE,CAAC,CAAC,KAAK,IAAI,iBAAiB,CAAC;oBAClC,MAAM,KAAK,CAAC;gBACT,KAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;gBAClC,KAAI,CAAC,YAAY,EAAE,CAAC;YACxB,CAAC,CACG,CAAC;QACN,CAAC,CAAC,CAAC;IACA,CAAC;IAED,4CAAY,GAAZ;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,2CAAW,GAAX;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;IAnDL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,kCAAkC;YAC/C,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,CAAC,oBAAQ,CAAC;SACpB,CAAC;;6BAAA;IA+CF,4BAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,6BAAqB,wBA6CjC,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from './user.model';\nimport { AuthService } from './auth.service';\nimport { AlertsService } from './alerts.service';\nimport { CvssPipe } from './cvss.pipe';\n\n@Component({\n    selector: 'alerts-detail',\n    templateUrl: 'app/alerts-detail.component.html',\n    directives: [],\n    pipes: [CvssPipe]\n})\n\nexport class AlertsDetailComponent implements OnInit {\n    alerts_obj;\n\n    constructor (private authService: AuthService,\n\t\t private alertsService: AlertsService,\n\t\t private router: Router,\n\t\t private route: ActivatedRoute\n\t\t){}\n\n    ngOnInit() {\n\tlet sub = this.route.params.subscribe(params => {\n\t    let id = +params['id'];\n\t    this.alertsService.getAlertsDetail(id).subscribe(\n\t\tprogram => {\n\t\t    this.alerts_obj = JSON.parse(JSON.stringify(program))\n\t\t    if (!this.alerts_obj.view) {\n\t\t\tthis.alertsService.markRead(id)\n\t\t\t    .subscribe(\n\t\t\t\tret => {\n\t\t\t\t    this.alertsService.discardCache()\n\t\t\t\t},\n\t\t\t\terror =>  {\n\t\t\t\t    if (error == \"NeedToReconnect\")\n\t\t\t\t\tthrow error;\n\t\t\t\t    console.log(error);\n\t\t\t\t});\n\t\t    }   \n\t\t},\n\t\terror => {\n\t\t    if (error == \"NeedToReconnect\")\n\t\t\tthrow error;\n\t\t    this.alertsService.discardCache();\n\t\t    this.onGoBackList();\n\t\t}\n\t    );\n\t});\n    }\n\n    onGoBackList() {\n\tthis.router.navigate(['/alerts']);\n    }\n    \n    onGoProgram() {\n\tthis.router.navigate(['/programs', this.alerts_obj.program.id]);\n    }\n}\n"]}