{"version":3,"file":"app.component.spec.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/app.component.spec.ts"],"names":[],"mappings":"AAAA,uCAAuC;;AAEvC,wBAKO,uBAAuB,CAAC,CAAA;AAE/B,qBAAwB,eAAe,CAAC,CAAA;AACxC,qBAAoE,eAAe,CAAC,CAAA;AACpF,wBAA4C,uBAAuB,CAAC,CAAA;AACpE,8BAA6B,iBAAiB,CAAC,CAAA;AAC/C,6BAA4B,gBAC5B,CAAC,CAD2C;AAC5C,+BAA8B,kBAAkB,CAAC,CAAA;AACjD,iCAAgC,oBAChC,CAAC,CADmD;AACpD,yCAAiC,4BACjC,CAAC,CAD4D;AAC7D,8BAAwB,iBACxB,CAAC,CADwC;AACzC,mCAAkC,sBAAsB,CAAC,CAAA;AACzD,iCAAgC,oBAAoB,CAAC,CAAA;AACrD,6BAA4B,gBAAgB,CAAC,CAAA;AAC7C,4BAAoB,eAAe,CAAC,CAAA;AACpC,uBAAuC,iBAAiB,CAAC,CAAA;AACzD,gCAA+B,mBAC/B,CAAC,CADiD;AAClD,sCAAqC,yBACrC,CAAC,CAD6D;AAG9D;IAAA;IAAsC,CAAC;IAApB,kCAAa,GAAb,cAAiB,CAAC;IAAC,iBAAC;AAAD,CAAC,AAAvC,IAAuC;AACvC;IAAA;IAA2B,CAAC;IAAD,yBAAC;AAAD,CAAC,AAA5B,IAA4B;AAE5B,6BAAmB,CAAC,cAAM,OAAA;IACtB,4BAAY;IACZ,0BAAW;IACX,2CAAgB;IAChB,kCAAe;IACf,8BAAa;IACb,yBAAkB;IAClB,qBAAW;IACX,uBAAO;IACP,sCAAiB;IACjB,kCAAe;IACf,0BAAW;IACX,iBAAG;IACH,gCAAc;IACd,4CAAoB;IACpB,cAAO,CAAC,eAAM,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;IACzC,cAAO,CAAC,uBAAc,EAAE,EAAE,QAAQ,EAAE,kBAAkB,EAAE,CAAC;IACzD,cAAO,CAAC,WAAI,EAAE;QACjB,UAAU,EAAE,UAAC,OAAoB,EAAE,cAAkC;YACjE,MAAM,CAAC,IAAI,WAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,EAAE,CAAC,qBAAW,EAAE,yBAAkB,CAAC;KACnC,CAAC;CACL,EAvByB,CAuBzB,CAAC,CAAC;AAEH,kBAAQ,CAAC,uBAAuB,EAAE;IAE9B,YAAE,CAAC,uBAAuB,EACvB,gBAAM,CAAC,CAAC,4BAAY,CAAC,EAAE,UAAC,GAAiB;QAC5C,gBAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC","sourcesContent":["/* tslint:disable:no-unused-variable */\n\nimport {\n  beforeEach, beforeEachProviders,\n  describe, xdescribe,\n  expect, it, xit,\n  async, inject\n} from '@angular/core/testing';\n\nimport { provide } from '@angular/core';\nimport { BaseRequestOptions, Response, ResponseOptions, Http } from '@angular/http';\nimport { MockBackend, MockConnection } from '@angular/http/testing';\nimport { AppComponent } from './app.component';\nimport { AuthService } from './auth.service'\nimport { AlertsService } from './alerts.service';\nimport { ProgramsService } from './programs.service'\nimport { HttpServiceError } from './http-service-error.class'\nimport { Backend } from './backend.class'\nimport { BackgroundService } from './background.service';\nimport { StationsService } from './stations.service';\nimport { UserService } from './user.service';\nimport { Api } from './api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StorageService } from './storage.service'\nimport { NotificationsService } from './notifications.service'\nimport { routes } from './app.routes';\n\nclass MockRouter { createUrlTree() {} }\nclass MockActivatedRoute { }\n\nbeforeEachProviders(() => [\n    AppComponent,\n    AuthService,\n    HttpServiceError,\n    ProgramsService,\n    AlertsService,\n    BaseRequestOptions,\n    MockBackend,\n    Backend,\n    BackgroundService,\n    StationsService,\n    UserService,\n    Api,\n    StorageService,\n    NotificationsService,\n    provide(Router, { useClass: MockRouter }),\n    provide(ActivatedRoute, { useClass: MockActivatedRoute }),\n    provide(Http, {\n\tuseFactory: (backend: MockBackend, defaultOptions: BaseRequestOptions) => {\n\t    return new Http(backend, defaultOptions);\n\t},\n\tdeps: [MockBackend, BaseRequestOptions]\n    })\n]);\n\ndescribe('App: VigilateFrontend', () => {\n\t\n    it('should create the app',\n       inject([AppComponent], (app: AppComponent) => {\n\t   expect(app).toBeTruthy();\n       }));\n});\n"]}