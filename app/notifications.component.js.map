{"version":3,"file":"notifications.component.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/notifications.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,sCAAqC,yBAErC,CAAC,CAF6D;AAO9D;IAKI,gCAAqB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;QAH/D,kBAAa,GAAG,EAAE,CAAA;IAG+C,CAAC;IAElE,yCAAQ,GAAR;QAAA,iBAkBC;QAhBJ,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,SAAS,CACxC,UAAA,KAAK;YACR,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,SAAS,CAC5C,UAAA,EAAE;YACL,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;YACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE,CAAC;gBACnD,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;oBACxC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACtC,KAAK,CAAC;gBACH,CAAC;YACL,CAAC;YACD,UAAU,CAAC,cAAO,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACJ,CAAC;IAEJ,2CAAU,GAAV,UAAW,EAAE;QACT,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;QACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE,CAAC;YAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACjC,SAAS,GAAG,CAAC,CAAC;gBACd,KAAK,CAAC;YACV,CAAC;QACE,CAAC;QACD,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACjD,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACtB,CAAC;IACL,CAAC;IA7CF;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,kCAAkC;SAClD,CAAC;;8BAAA;IA2CF,6BAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,8BAAsB,yBAyClC,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NotificationsService } from './notifications.service'\n\n@Component({\n    selector: 'notifications',\n    templateUrl: 'app/notifications.component.html'\n})\n\nexport class NotificationsComponent implements OnInit {\n\n    notifications = []\n\n\n    constructor (private notificationsService: NotificationsService){}\n\n    ngOnInit() {\n\n\tthis.notificationsService.eventNew.subscribe(\n\t    notif => {\n\t\tthis.notifications.push(notif);\n\t    });\n\n\tthis.notificationsService.eventExpired.subscribe(\n\t    id => {\n\t\tlet idx_slice = -1;\n\t\tfor (let i = 0 ; i < this.notifications.length ; i++) {\n\t\t    if (this.notifications[i].id == id) {\n\t\t\tthis.notifications[i].expiring = true;\n\t\t\tbreak;\n\t\t    }\n\t\t}\n\t\tsetTimeout(() => {this.deleteItem(id)}, 1000);\n\t    });\n    }\n\n\tdeleteItem(id) {\n\t    let idx_slice = -1;\n\t    for (let i = 0 ; i < this.notifications.length ; i++) {\n\t\tif (this.notifications[i].id == id) {\n\t\t    idx_slice = i;\n\t\t    break;\n\t\t}\n\t    }\n\t    if (idx_slice != -1) {\n\t\tlet tmp = this.notifications.slice(0, idx_slice);\n\t\ttmp = tmp.concat(this.notifications.slice(idx_slice + 1));\n\t\tthis.notifications = tmp;\n\t    }\n\t}\n}\n"]}