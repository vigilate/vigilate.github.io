{"version":3,"file":"station.pipe.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/station.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAGpD;IAAA;IAWA,CAAC;IATG,+BAAS,GAAT,UAAU,IAAS,EAAE,QAAQ,EAAE,UAAU;QAC5C,EAAE,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,GAAG;gBACzB,MAAM,CAAC,UAAU,IAAI,KAAK,IAAI,GAAG,CAAC,KAAK,IAAI,UAAU,CAAC;YACnD,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,GAAG;YAClB,MAAM,CAAC,UAAU,IAAI,KAAK,IAAI,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,UAAU,CAAC;QACvE,CAAC,CAAC,CAAC;IACA,CAAC;IAXL;QAAC,WAAI,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,CAAC;;mBAAA;IAYxB,kBAAC;AAAD,CAAC,AAXD,IAWC;AAXY,mBAAW,cAWvB,CAAA","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'station'})\nexport class StationPipe implements PipeTransform {\n\n    transform(list: any, arg_type, station_id): string {\n\tif (arg_type == \"prog\")\n\t    return list.filter(obj => {\n\t\treturn station_id == \"all\" || obj.poste == station_id;\n\t    });\n\treturn list.filter(obj => {\n\t    return station_id == \"all\" || obj.program_info.poste == station_id;\n\t});\n    }\n}\n"]}