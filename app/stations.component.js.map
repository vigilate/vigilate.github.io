{"version":3,"file":"stations.component.js","sourceRoot":"","sources":["../home/vigilate/frontend/frontend/tmp/broccoli_type_script_compiler-input_base_path-tkvoKOOh.tmp/0/src/app/stations.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from './user.model';\nimport { AuthService } from './auth.service';\nimport { StationsService } from './stations.service';\nimport {PaginatePipe, PaginationControlsCmp, PaginationService} from 'ng2-pagination/dist/ng2-pagination';\nimport { Api } from './api.service';\nimport { StorageService } from './storage.service'\nimport { FormBuilder, Validators, Control, ControlGroup, FORM_DIRECTIVES } from '@angular/common';\n\n@Component({\n    selector: 'stations',\n    templateUrl: 'app/stations.component.html',\n    pipes: [PaginatePipe],\n    providers: [PaginationService]\n})\n\nexport class StationsComponent implements OnInit {\n\n    pageLoading = true;\n    loadingSubmit = false;\n    stations = []\n    stations_dic = {}\n    new_station_name = \"\";\n\n    tour_current_step = \"\"\n\n    clicked = false;\n    ctrl = {\n\tform: null,\n\tname: null,\n    }\n    error_field = {}\n    \n    constructor (private authService: AuthService,\n\t\t private stationsService: StationsService,\n\t\t private router: Router,\n\t\t private api: Api,\n\t\t private storageService: StorageService,\n\t\t private builder: FormBuilder\n\t\t){}\n\n    ngOnInit() {\n\tthis.ctrl.name = new Control(\"\", Validators.required);\n\tthis.ctrl.form = this.builder.group({\n\t    name:  this.ctrl.name,\n\t});\n\n\tthis.reloadList();\n\tlet tour = this.storageService.get(\"Tour\", \"current_step\", \"\");\n\tif (tour == \"/stations\") {\n\t    this.tour_current_step = \"add-station\";\n\t    this.storageService.store(\"Tour\", \"current_step\", this.tour_current_step);\n\t}\n    }\n\n    reloadList() {\n\tthis.pageLoading = true;\n\tthis.stationsService.getStationsList()\n            .subscribe(\n                stations => {\n\t\t    for (let st of stations)\n\t\t\tthis.stations_dic[st.id] = st.name;\n\t\t    this.stations = stations;\n\t\t    this.pageLoading = false;\n\t\t},\n                error =>  {\n\t\t    this.pageLoading = false;\n\t\t    if (error == \"NeedToReconnect\")\n\t\t\tthrow error;\n\t\t    console.log(error);\n\t\t});\n    }\n\n    onClick(id) {\n\tthis.router.navigate(['/stations', id]);\n    }\n\n    onDelete(id) {\n\tlet ret = window.confirm(\"The station '\" + this.stations_dic[id] + \"' and all the programs linked to it will be deleted.\");\n\tif (!ret)\n\t    return;\n\tthis.stationsService.deleteStation(id)\n            .subscribe(\n                stations => {\n\t\t    this.stationsService.discardCache();\n\t\t    this.reloadList();\n\t\t},\n                error =>  {\n\t\t    if (error == \"NeedToReconnect\")\n\t\t\tthrow error;\n\t\t    if (error.code == 404)\n\t\t\tthis.reloadList();\n\t\t    console.log(error);\n\t\t});\n    }\n\n    onAddStation() {\n\tthis.error_field = {}\n\tthis.clicked = true;\n\tif (!this.ctrl.form.valid)\n\t    return;\n\tthis.loadingSubmit = true;\n\tthis.stationsService.createStation(this.new_station_name)\n            .subscribe(\n                stations => {\n\t\t    this.loadingSubmit = false;\n\t\t    this.stationsService.discardCache();\n\t\t    this.reloadList();\n\t\t    let tour = this.storageService.get(\"Tour\", \"current_step\", \"\");\n\t\t    if (tour == \"add-station\") {\n\t\t\tthis.tour_current_step = \"download-scanner\";\n\t\t\tthis.storageService.store(\"Tour\", \"current_step\", this.tour_current_step);\n\n\t\t    }\n\t\t},\n                error =>  {\n\t\t    this.loadingSubmit = false;\n\t\t    if (error == \"NeedToReconnect\")\n\t\t\tthrow error;\n\t\t    if (error.json) {\n\t\t\tfor (let f in error.json) {\n\t\t\t    this.error_field[f] = error.json[f].join(\" \");\n\t\t\t}\n\t\t    }\n\t\t});\n    }\n\n    onDownload(id, name) {\n\tthis.api.get(\"/get_scanner/\" + id + \"/\", false).subscribe(\n\t    data => {\n\t\tlet type = 'application/text';\n\t\tif (data.headers.has(\"Content-Type\"))\n\t\t    type = data.headers.get(\"Content-Type\");\n\t\tlet blob = new Blob([data.text()], {type: type});\n\t\twindow[\"saveAs\"](blob, \"scanner-\" + this.sanitizedName(name) + \"_\" + id + \".py\");\n\n\t\tlet tour = this.storageService.get(\"Tour\", \"current_step\", \"\");\n\t\t    if (tour == \"download-scanner\") {\n\t\t\tthis.tour_current_step = \"/programs\";\n\t\t\tthis.storageService.store(\"Tour\", \"current_step\", this.tour_current_step);\n\t\t    }\n\t    },\n\t    error => {\n\t\tif (error == \"NeedToReconnect\")\n\t\t    throw error;\n\t\tif (error.code == 404)\n\t\t    this.reloadList();\n\t    }\n\t);\n    }\n    sanitizedName(name) {\n\treturn name.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n    }\n\n    onClickRefresh() {\n\tthis.stationsService.discardCache();\n\tthis.reloadList();\n    }\n}\n"]}